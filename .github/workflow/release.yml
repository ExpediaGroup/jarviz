name: Release
on:
  release:
    types: [ published ]
jobs:
  publish:
    name: Publish RELEASE
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 12.x ]
        java-version: [ 8 ]
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Setup Java SDK ${{ matrix.java-version }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java-version }}
          # this also creates settings.xml with the following server
          server-id: oss-sonatype # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: SONATYPE_USERNAME # env variable for username in deploy
          server-password: SONATYPE_PASSWORD # env variable for token in deploy
          # only signed artifacts will be released to maven central. this sets up things for the maven-gpg-plugin
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: GPG_PASSPHRASE # env variable for GPG private key passphrase
          settings-path: ${{ github.workspace }}
      - name: Cache local Maven repository
        uses: actions/cache@v2
        env:
          cache-name: cache-maven-packages
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Release Maven artifacts
        run: |
          RELEASE_VERSION=$(echo "${GITHUB_REF#refs/*/v}")
          echo "Release version: ${RELEASE_VERSION}"
          mvn org.codehaus.mojo:versions-maven-plugin:2.8.1:set -DnewVersion=${RELEASE_VERSION}
          mvn deploy -s $GITHUB_WORKSPACE/settings.xml --settings /home/runner/.m2/settings.xml -B -P oss-release -DskipTests=true
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}
      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: ${{ runner.os }}-npm
      - name: Build and publish Node modules
        run: |
          RELEASE_VERSION=$(echo "${GITHUB_REF#refs/*/v}")
          echo "Release version: ${RELEASE_VERSION}"
          cd ./jarviz-graph
          npm install
          npm run build
          npm version ${RELEASE_VERSION}
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
